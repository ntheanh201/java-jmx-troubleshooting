apiVersion: apps/v1
kind: Deployment
metadata:
  name: java-jmx
spec:
  replicas: 2
  selector:
    matchLabels:
      app: java-jmx
  template:
    metadata:
      name: java-jmx
      labels:
        app: java-jmx
    spec:
      shareProcessNamespace: true
      containers:
        - name: tomcat
          image: tomcat
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080
              name: tcp
            - containerPort: 9090
              name: jmx
          env:
            - name: JAVA_OPTS
              value: -Xms3g -Xmx3g -XX:MaxDirectMemorySize=512m -XX:+ExitOnOutOfMemoryError -Dlog4j2.formatMsgNoLookups=true -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.local.only=false -Dcom.sun.management.jmxremote.port=9090 -Dcom.sun.management.jmxremote.rmi.port=9090 -Djava.rmi.server.hostname=127.0.0.1
          readinessProbe:
            periodSeconds: 20
            timeoutSeconds: 5
            tcpSocket:
              port: tcp
          livenessProbe:
            initialDelaySeconds: 60
            periodSeconds: 20
            timeoutSeconds: 5
            tcpSocket:
              port: tcp
        - name: "exporter-container"
          image: "bitnami/jmx-exporter:latest"
          imagePullPolicy:
          command:
            - sh
            - -c
            - -x
            - java -jar jmx_prometheus_httpserver.jar 9092 /tmp/jmx-config.yaml
          ports:
            - name: exporter-port
              containerPort: 9092
          volumeMounts:
            - name: configmap-jmx
              mountPath: /tmp
      volumes:
        - name: configmap-jmx
          configMap:
            name: jmx-configmap
